// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id        String   @id @default(uuid())
  clerkId   String   @unique
  email     String   @unique
  username  String   @unique
  firstName String
  lastName  String
  photo     String
  events    Event[]  @relation("EventOrganizer")
  orders    Order[]  @relation("OrderBuyer")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Category {
  id     String  @id @default(uuid())
  name   String  @unique
  events Event[] @relation("EventCategory")
}

model Event {
  id            String   @id @default(uuid())
  title         String
  description   String?
  location      String?
  createdAt     DateTime @default(now())
  imageUrl      String
  startDateTime DateTime @default(now())
  endDateTime   DateTime @default(now())
  price         String?
  isFree        Boolean  @default(false)
  url           String?
  categoryId    String
  category      Category @relation("EventCategory", fields: [categoryId], references: [id])
  organizerId   String
  organizer     User     @relation("EventOrganizer", fields: [organizerId], references: [id])
  orders        Order[]  @relation("OrderEvent")
}

model Order {
  id          String   @id @default(uuid())
  createdAt   DateTime @default(now())
  stripeId    String   @unique
  totalAmount String?
  eventId     String
  event       Event    @relation("OrderEvent", fields: [eventId], references: [id])
  buyerId     String
  buyer       User     @relation("OrderBuyer", fields: [buyerId], references: [id])
}
